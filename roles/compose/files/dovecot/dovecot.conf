mail_location = maildir:/var/mail/%u/

namespace inbox {
  inbox = yes
  location = 
  mailbox Drafts {
    special_use = \Drafts
  }
  mailbox Junk {
    special_use = \Junk
  }
  mailbox Sent {
    special_use = \Sent
  }
  mailbox Archive {
    special_use = \Archive
  }
  mailbox Trash {
    special_use = \Trash
  }
  prefix = 
}

protocols = imap submission sieve lmtp

# change to 'no' if you don't have ssl cert/keys, and comment out ssl_cert/ssl_key
ssl = no

#ssl_cert = </etc/dovecot/private/dovecot.pem
#ssl_key = </etc/dovecot/private/dovecot.pem

# login is for outlook express smtpd auth
auth_mechanisms = plain login

# If you're having trouble, try uncommenting these:
#auth_debug = yes
#auth_debug_passwords = yes

userdb { 
    driver = sql
    args = /etc/dovecot/dovecot-sql.conf.ext
}

passdb { 
    driver = sql
    args = /etc/dovecot/dovecot-sql.conf.ext
}

# Uncomment this if you want Postfix to be able to do smtpd auth through dovecot
# At a minimum Postfix probably needs smtpd_sasl_type = dovecot
# And additionally: smtpd_sasl_path = private/auth
#service auth {
#    unix_listener /var/spool/postfix/private/auth {
#        mode = 0660
#        user = postfix
#        group = postfix
#    }
#}

# Needs to match Postfix virtual_uid_maps (TODO - check what value makes sense here)
first_valid_uid = 1000
last_valid_uid = 1000

# allow plaintext auth (change to 'yes' to block plaintext passwords)
disable_plaintext_auth = no

### IMAP (with quota)
service imap {
#     inet_listener {
#         port = 993
#     }
    #mail_plugins = quota
}

service lmtp {
#   inet_listener {
#     port = 24
#   }
}
#
### Local Delivery Agent
#protocol lda {
#  mail_plugins = quota
#}
#
### Dictionary DB proxy
#dict {
#  quota = pgsql:/etc/dovecot-dict-quota.conf
#}
#
### Default quota values
#plugin {
#  quota = dict:storage=200000 proxy::quota
#}

log_path=/dev/stdout
info_log_path=/dev/stdout
debug_log_path=/dev/stdout
