mail_location = maildir:/srv/mail/%u/

namespace inbox {
  inbox = yes
  location = 
  mailbox Drafts {
    special_use = \Drafts
  }
  mailbox Junk {
    special_use = \Junk
  }
  mailbox Sent {
    special_use = \Sent
  }
  mailbox Archive {
    special_use = \Archive
  }
  mailbox Trash {
    special_use = \Trash
  }
  prefix = 
}

protocols = imap sieve

# change to 'no' if you don't have ssl cert/keys, and comment out ssl_cert/ssl_key
ssl = required
#verbose_ssl = yes

ssl_cert = </etc/dovecot_certs/mail2.nesono.com/cert.pem
ssl_key = </etc/dovecot_certs/mail2.nesono.com/key.pem

# login is for outlook express smtpd auth
auth_mechanisms = plain login cram-md5

# If you're having trouble, try uncommenting these:
#auth_debug = yes
#auth_debug_passwords = yes

userdb { 
    driver = sql
    args = /etc/dovecot/dovecot-sql.conf.ext
}

passdb { 
    driver = sql
    args = /etc/dovecot/dovecot-sql.conf.ext
}

# Provide authentication to Postfix SMTP server
service auth {
   unix_listener /var/spool/mail/private/auth {
       mode = 0660
       user = dovenull # TODO: needs to be in sync with postfix user ID
       group = dovenull # TODO: needs to be in sync with postfix group ID
   }
}

# Needs to match Postfix virtual_uid_maps (TODO: vmail user id must be in sync!)
first_valid_uid = 1000
last_valid_uid = 1000

# allow plaintext auth (change to 'yes' to block plaintext passwords)
disable_plaintext_auth = no

### IMAP (with quota)
service imap {
#     inet_listener {
#         port = 993
#     }
    #mail_plugins = quota
}

plugin {
  sieve = file:~/sieve;active=~/.dovecot.sieve
}

### Local Delivery Agent
#protocol lda {
#  mail_plugins = quota
#}
#
### Dictionary DB proxy
#dict {
#  quota = pgsql:/etc/dovecot-dict-quota.conf
#}
#
### Default quota values
#plugin {
#  quota = dict:storage=200000 proxy::quota
#}

log_path=/dev/stdout
info_log_path=/dev/stdout
debug_log_path=/dev/stdout
