- name: Create volumes for services
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - /svc/volumes/nginx
    - /svc/volumes/nginx/certs
    - /svc/volumes/nginx/conf.d
    - /svc/volumes/nginx/vhost.d
    - /svc/volumes/nginx/html
    - /svc/volumes/acme-companion
    - /svc/volumes/mail
    - /svc/volumes/dovecot
    - /svc/volumes/mysql_mail_data

- name: Create Docker compose files directory
  ansible.builtin.file:
    path: /var/run/docker_compose_files
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create Docker compose directories
  ansible.builtin.file:
    path: "/var/run/docker_compose/services/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - base
    - mail

- name: Copy nginx.tmpl
  ansible.builtin.copy:
    src: nginx.tmpl
    dest: /svc/volumes/nginx/nginx.tmpl
    owner: root
    group: root
    mode: 0644

- name: Copy services compose
  ansible.builtin.copy:
    src: "{{ item }}.yml"
    dest: "/var/run/docker_compose/services/{{ item }}/docker_compose.yml"
    owner: root
    group: root
    mode: 0644
  loop:
    - base
    - mail

- name: Copy dovecot configuration
  ansible.builtin.copy:
    src: dovecot/
    dest: /svc/volumes/dovecot
    owner: root
    group: root
    mode: 0644

- name: Create Docker secrets
  docker_secret:
    name: "{{ item }}"
    # pack the data to avoid potential interpretation of the contents by Ansible
    data: "{{ lookup('file', 'secret_{{ item }}.txt') | b64encode }}"
    data_is_b64: true
    state: present
  loop:
    - mysql_mail_password
    - mysql_mail_user
    - mysql_mail_root_password
    - postfixadmin_setup_password

- name: Init a new swarm with default parameters
  docker_swarm:
    state: present

- name: Deploy services
  community.docker.docker_stack:
    state: present
    name: "{{ item }}"
    prune: yes
    compose: 
      - "/var/run/docker_compose/services/{{ item }}/docker_compose.yml"
  loop:
    - base
    - mail

#- name: Remove mailserver
  #community.docker.docker_stack:
    #state: absent
    #prune: yes
    #name: mailserver
    #compose:
      #- /var/run/docker_compose/mailserver/docker-compose.yaml
  #tags: [ never, docker_purge ]
