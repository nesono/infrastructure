- name: Create volumes for services
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - /svc/volumes/mailserver/db
    - /svc/volumes/mailserver/mail-data
    - /svc/volumes/nginx
    - /svc/volumes/nginx/certs
    - /svc/volumes/nginx/conf.d
    - /svc/volumes/nginx/vhost.d
    - /svc/volumes/nginx/html
    - /svc/volumes/acme-companion
    - /svc/volumes/postfixadmin

- name: Create Docker compose files directory
  ansible.builtin.file:
    path: /var/run/docker_compose_files
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create Docker compose services directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - /var/run/docker_compose/services


- name: Copy nginx.tmpl
  ansible.builtin.copy:
    src: nginx.tmpl
    dest: /svc/volumes/nginx/nginx.tmpl
    owner: root
    group: root
    mode: 0644

- name: Copy services compose
  ansible.builtin.copy:
    src: services.yml
    dest: /var/run/docker_compose/services/docker-compose.yaml
    owner: root
    group: root
    mode: 0644

- name: Copy postfixadmin custom config
  ansible.builtin.copy:
    src: postfixadmin_config_local.php
    dest: /svc/volumes/postfixadmin/postfixadmin_config_local.php
    owner: root
    group: root
    mode: 0644

- name: Create Docker secrets
  docker_secret:
    name: "{{ item }}"
    # pack the data to avoid potential interpretation of the contents by Ansible
    data: "{{ lookup('file', 'secret_{{ item }}.txt') | b64encode }}"
    data_is_b64: true
    state: present
  loop:
    - mail_postgres_password
    - mail_postgres_user
    - mail_postfixadmin_setup_password

- name: Init a new swarm with default parameters
  docker_swarm:
    state: present

- name: Deploy services
  community.docker.docker_stack:
    state: present
    name: services
    compose: 
      - /var/run/docker_compose/services/docker-compose.yaml

#- name: Remove mailserver
  #community.docker.docker_stack:
    #state: absent
    #prune: yes
    #name: mailserver
    #compose:
      #- /var/run/docker_compose/mailserver/docker-compose.yaml
  #tags: [ never, docker_purge ]
